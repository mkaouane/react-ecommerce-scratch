{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\b-boy\\\\Desktop\\\\Projets\\\\react-ecommerce-scratch\\\\frontend\\\\src\\\\screens\\\\CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CartScreen(props) {\n  _s();\n\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split('=')[1]) : 1;\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cart Screen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartScreen, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["C:/Users/b-boy/Desktop/Projets/react-ecommerce-scratch/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","CartScreen","props","productId","match","params","id","qty","location","search","Number","split","dispatch","addToCart","cleanup","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AACA,QAAMC,GAAG,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAAf,GAAuBC,MAAM,CAACR,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsBE,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAD,CAA7B,GAAmE,CAA/E;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGG,SAAH,EAAa;AACTS,MAAAA,QAAQ,CAACC,SAAS,CAACV,SAAD,EAAYI,GAAZ,CAAV,CAAR;AACH;;AACD,WAAO,MAAM;AACTO,MAAAA,OAAO;AACV,KAFD;AAGH,GAPQ,EAON,CAACC,KAAD,CAPM,CAAT;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAjBQd,U;;KAAAA,U;AAmBT,eAAeA,UAAf","sourcesContent":["import React,  {useEffect} from 'react'\r\n\r\nfunction CartScreen(props) {\r\n    const productId = props.match.params.id;\r\n    const qty = props.location.search? Number(props.location.search.split('=')[1]):1;\r\n\r\n    useEffect(() => {\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n        return () => {\r\n            cleanup\r\n        }\r\n    }, [input])\r\n    return (\r\n        <div>\r\n           Cart Screen \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n"]},"metadata":{},"sourceType":"module"}